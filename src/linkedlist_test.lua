---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by alanp.
--- DateTime: 2019-05-09 오후 6:48
---


linkedlist = require('linkedlist')
lu = require('luaunit')

TestLinkedList = {}
    function TestLinkedList:testCreateLinkedList()
        list1 = LinkedList:new()

        lu.assertEquals(list1:get_back(), nil)
        lu.assertEquals(list1:get_front(), nil)
        lu.assertEquals(list1:size(), 0)
    end

    function TestLinkedList:testAddBack()
        list1 = LinkedList:new()
        list1:add_back(3)
        lu.assertEquals(list1:get_back(), 3)
        lu.assertEquals(list1:get_front(), 3)
        lu.assertEquals(list1:size(), 1)
        list1:remove_back()
        lu.assertEquals(list1:size(), 0)
    end

    function TestLinkedList:testAddFront()
        list1 = LinkedList:new()
        list1:add_front(3)
        lu.assertEquals(list1:get_back(), 3)
        lu.assertEquals(list1:get_front(), 3)
        lu.assertEquals(list1:size(), 1)
        list1:remove_front()
        lu.assertEquals(list1:size(), 0)
    end

    function TestLinkedList:testAddBackRepeat()
        list1 = LinkedList:new()
        list1:add_back(1)
        list1:add_back(2)
        list1:add_back(3)
        lu.assertEquals(list1:get_back(), 3)
        lu.assertEquals(list1:get_front(), 1)
        lu.assertEquals(list1:size(), 3)
        list1:remove_front()
        lu.assertEquals(list1:get_front(), 2)
        lu.assertEquals(list1:size(), 2)
    end

    function TestLinkedList:testAddFrontRepeat()
        list1 = LinkedList:new()
        list1:add_front(1)
        list1:add_front(2)
        list1:add_front(3)
        lu.assertEquals(list1:get_back(), 1)
        lu.assertEquals(list1:get_front(), 3)
        lu.assertEquals(list1:size(), 3)
        list1:remove_back()
        lu.assertEquals(list1:get_back(), 2)
        lu.assertEquals(list1:size(), 2)
    end

os.exit(lu.LuaUnit.run())